service: team4-split


constructs:
  load:
    type: queue
    worker:
      vpc:
        securityGroupIds:
          - sg-0afcfd2a983b80407
        subnetIds:
          - subnet-0f0145739a0011749
          - subnet-0b5a9c546fd7ca400
          - subnet-026cbc956a6cc5592
      package:
        patterns:
          - "!extract/**"
          - "!deploy.sh"
          - "!requirements.txt"
          - "!node_modules"
          - "!package.json"
          - "!package-lock.json"
          - "!README.md"
          - "!.github/**"
          - "!.serverless"
      timeout: 600
      reservedConcurrency: 1
      role: arn:aws:iam::351115496094:role/data-project-lambda-role
      handler: loader.handle
      layers:
        - Ref: PythonRequirementsLambdaLayer
      memorySize: 10240


plugins:
  - serverless-python-requirements
  - serverless-lift
custom:
  pythonRequirements:
    slim: true
    layer: true
    dockerizePip: true


provider:
  iam:  
    role:
      permissionsBoundary: arn:aws:iam::351115496094:policy/ScopePermissions
  region: eu-west-1
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  timeout: 300


package:
  individually: true
  # patterns:
    # - "!*"
    # - "!*/**"


functions:
  extract:
    handler: extract/extract.handle
    layers:
      - Ref: PythonRequirementsLambdaLayer
    timeout: 300
    role: arn:aws:iam::351115496094:role/data-project-lambda-role
    events:
      - s3:
          bucket: delon3-team-4-bucket
          event: 
            - s3:ObjectCreated:*
          rules:
            - suffix: .csv
          existing: true
    environment:
      QUEUE_URL: ${construct:load.queueUrl}
    package:
      patterns:
        - "!*"
        - "!*/**"
        - "extract/extract.py"


resources:
  Resources:
    IamRoleCustomResourcesLambdaExecution:
      Type: AWS::IAM::Role
      Properties:
        PermissionsBoundary: arn:aws:iam::351115496094:policy/ScopePermissions
